name: ML Pipeline
on:
  push:

env:
  AZURE_RESOURCE_GROUP: "degradai-cpr"
  AZURE_WORKSPACE: "azure-ml-cpr"
  AZURE_LOCATION: "northeurope"
  AZURE_TAGS: "{}"


jobs:
  unit-test:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12.6
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.15"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --with dev

      - name: Run tests
        run: poetry run pytest tests/unit/

  integration-test:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12.6
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.15"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --with dev

      - name: Run tests
        run: poetry run pytest tests/unit/

  ml-pipeline:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    environment: degradai
    needs: unit-test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12.6
      uses: actions/setup-python@v5
      with:
        python-version: "3.10.15"

    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

#    - name: setup azure
#      working-directory: train
#      run: ./setup_AzureML.sh ${{ secrets.AZURE_SUBSCRIPTION_ID }} ${{ env.AZURE_RESOURCE_GROUP }} ${{ env.AZURE_WORKSPACE }} ${{ env.AZURE_LOCATION }}
#
#    - name: Run pipeline
#      working-directory: train
#      run: ./run_AzureML.sh ${{ secrets.AZURE_SUBSCRIPTION_ID }} ${{ env.AZURE_RESOURCE_GROUP }} ${{ env.AZURE_WORKSPACE }} ${{ env.AZURE_LOCATION }} ${{ env.AZURE_TAGS }}

    - name: Download model
      working-directory: train
      env:
        DOWNLOAD_PATH: "../app"
      run: |
        MODEL_VERSION=$(cat ../app/model/model_version)
        echo "Downloading model version $MODEL_VERSION"
        ./run_download_model.sh $MODEL_VERSION ${{ env.AZURE_RESOURCE_GROUP }} ${{ env.AZURE_WORKSPACE }} ${{ env.AZURE_LOCATION }} ${{ secrets.AZURE_SUBSCRIPTION_ID }} ${{ env.DOWNLOAD_PATH }} 

    - name: Check app folder
      run: ls app/model

#    - name: Create bump and changelog
#      id: cz
#      uses: commitizen-tools/commitizen-action@master
#      with:
#        github_token: ${{ secrets.GIT_TOKEN }}
#        changelog_increment_filename: body.md
#
#    - name: Release
#      uses: softprops/action-gh-release@v1
#      with:
#        body_path: body.md
#        tag_name: ${{ env.REVISION }}
#      env:
#        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

